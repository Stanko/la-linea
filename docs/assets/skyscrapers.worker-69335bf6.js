(function(){"use strict";class e{constructor(t,s,i){this.x=t,this.y=s,this.z=i}static randomUnitVector(){for(;;){const t=Math.random()*2-1,s=Math.random()*2-1,i=Math.random()*2-1;if(!(t*t+s*s+i*i>1))return new e(t,s,i).normalize()}}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}distance(t){return this.sub(t).length()}lengthSquared(){return this.x*this.x+this.y*this.y+this.z*this.z}distanceSquared(t){return this.sub(t).lengthSquared()}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}cross(t){const s=this.y*t.z-this.z*t.y,i=this.z*t.x-this.x*t.z,h=this.x*t.y-this.y*t.x;return new e(s,i,h)}normalize(){const t=this.length();return t===0?(console.warn("Length is 0, returning zero vector"),new e(0,0,0)):new e(this.x/t,this.y/t,this.z/t)}add(t){return new e(this.x+t.x,this.y+t.y,this.z+t.z)}sub(t){return new e(this.x-t.x,this.y-t.y,this.z-t.z)}mul(t){return new e(this.x*t.x,this.y*t.y,this.z*t.z)}div(t){return t.x===0||t.y===0||t.z,new e(this.x/t.x,this.y/t.y,this.z/t.z)}addScalar(t){return new e(this.x+t,this.y+t,this.z+t)}subScalar(t){return new e(this.x-t,this.y-t,this.z-t)}mulScalar(t){return new e(this.x*t,this.y*t,this.z*t)}divScalar(t){return t===0&&console.warn(`Dividing by zero, n: ${t}`),new e(this.x/t,this.y/t,this.z/t)}min(t){return new e(Math.min(this.x,t.x),Math.min(this.y,t.y),Math.min(this.z,t.z))}max(t){return new e(Math.max(this.x,t.x),Math.max(this.y,t.y),Math.max(this.z,t.z))}minAxis(){const t=Math.abs(this.x),s=Math.abs(this.y),i=Math.abs(this.z);return t<=s&&t<=i?new e(1,0,0):s<=t&&s<=i?new e(0,1,0):new e(0,0,1)}minComponent(){return Math.min(this.x,this.y,this.z)}segmentDistance(t,s){const i=t.distanceSquared(s);if(i===0)return this.distance(t);const h=this.sub(t).dot(s.sub(t))/i;return h<0?this.distance(t):h>1?this.distance(s):t.add(s.sub(t).mulScalar(h)).distance(this)}toString(){return`Vector(${this.x}, ${this.y}, ${this.z})`}}var p=(r=>(r[r.AxisNone=0]="AxisNone",r[r.AxisX=1]="AxisX",r[r.AxisY=2]="AxisY",r[r.AxisZ=3]="AxisZ",r))(p||{});class f{constructor(t,s){this.min=t,this.max=s}static boxForShapes(t){if(t.length===0)return new f(new e(0,0,0),new e(0,0,0));let s=t[0].boundingBox();for(let i=1;i<t.length;i++)s=s.extend(t[i].boundingBox());return s}static boxForVectors(t){if(t.length===0)return new f(new e(0,0,0),new e(0,0,0));let s=t[0],i=t[0];for(let h=1;h<t.length;h++)s=s.min(t[h]),i=i.max(t[h]);return new f(s,i)}anchor(t){return this.min.add(this.size().mul(t))}center(){return this.anchor(new e(.5,.5,.5))}size(){return this.max.sub(this.min)}contains(t){return this.min.x<=t.x&&this.max.x>=t.x&&this.min.y<=t.y&&this.max.y>=t.y&&this.min.z<=t.z&&this.max.z>=t.z}extend(t){return new f(this.min.min(t.min),this.max.max(t.max))}intersect(t){let s=(this.min.x-t.origin.x)/t.direction.x,i=(this.min.y-t.origin.y)/t.direction.y,h=(this.min.z-t.origin.z)/t.direction.z,x=(this.max.x-t.origin.x)/t.direction.x,n=(this.max.y-t.origin.y)/t.direction.y,o=(this.max.z-t.origin.z)/t.direction.z,c;s>x&&(c=s,s=x,x=c),i>n&&(c=i,i=n,n=c),h>o&&(c=h,h=o,o=c);const a=Math.max(s,i,h),u=Math.min(x,n,o);return{tmin:a,tmax:u}}partition(t,s){let i=!1,h=!1;switch(t){case p.AxisX:i=this.min.x<=s,h=this.max.x>=s;break;case p.AxisY:i=this.min.y<=s,h=this.max.y>=s;break;case p.AxisZ:i=this.min.z<=s,h=this.max.z>=s;break}return{left:i,right:h}}}const O=1e9;class I{constructor(t,s){this.shape=t,this.t=s}ok(){return this.t<O}min(t){return this.t<=t.t?this:t}max(t){return this.t>t.t?this:t}}const B=new I(null,O);function E(r){const t=r.length;if(t==0)return 0;if(t%2===1)return r[t/2-1];{const s=r[t/2-1],i=r[t/2];return(s+i)/2}}const F=(r,t)=>r-t;class A{constructor(t){this.axis=p.AxisNone,this.point=0,this.shapes=t,this.left=null,this.right=null}intersect(t,s,i){let h=0,x=!1;switch(this.axis){case p.AxisNone:return this.intersectShapes(t);case p.AxisX:h=(this.point-t.origin.x)/t.direction.x,x=t.origin.x<this.point||t.origin.x==this.point&&t.direction.x<=0;break;case p.AxisY:h=(this.point-t.origin.y)/t.direction.y,x=t.origin.y<this.point||t.origin.y==this.point&&t.direction.y<=0;break;case p.AxisZ:h=(this.point-t.origin.z)/t.direction.z,x=t.origin.z<this.point||t.origin.z==this.point&&t.direction.z<=0;break}let n=null,o=null;if(x?(n=this.left,o=this.right):(n=this.right,o=this.left),h>i||h<=0)return n.intersect(t,s,i);if(h<s)return o.intersect(t,s,i);{const c=n.intersect(t,s,h);if(c.t<=h)return c;const a=o.intersect(t,h,Math.min(i,c.t));return c.t<=a.t?c:a}}intersectShapes(t){let s=B;return this.shapes.forEach(i=>{const h=i.intersect(t);h.t<s.t&&(s=h)}),s}partitionScore(t,s){let i=0,h=0;return this.shapes.forEach(x=>{const n=x.boundingBox(),{left:o,right:c}=n.partition(t,s);o&&i++,c&&h++}),i>=h?i:h}partition(t,s,i){const h=[],x=[];return this.shapes.forEach(n=>{const o=n.boundingBox(),{left:c,right:a}=o.partition(s,i);c&&h.push(n),a&&x.push(n)}),{left:h,right:x}}split(t){if(this.shapes.length<8)return;let s=[],i=[],h=[];this.shapes.forEach($=>{const g=$.boundingBox();s.push(g.min.x),s.push(g.max.x),i.push(g.min.y),i.push(g.max.y),h.push(g.min.z),h.push(g.max.z)}),s=s.sort(F),i=i.sort(F),h=h.sort(F);let x=E(s),n=E(i),o=E(h),c=Math.round(this.shapes.length*.85),a=p.AxisNone,u=0;const m=this.partitionScore(p.AxisX,x);m<c&&(c=m,a=p.AxisX,u=x);const d=this.partitionScore(p.AxisY,n);d<c&&(c=d,a=p.AxisY,u=n);const w=this.partitionScore(p.AxisZ,o);if(w<c&&(c=w,a=p.AxisZ,u=o),a==p.AxisNone)return;const{left:y,right:M}=this.partition(c,a,u);this.axis=a,this.point=u,this.left=new A(y),this.right=new A(M),this.left.split(t+1),this.right.split(t+1),this.shapes=null}}class X{constructor(t){this.box=f.boxForShapes(t);const s=new A(t);s.split(0),this.root=s}intersect(t){const{tmin:s,tmax:i}=this.box.intersect(t);return i<s||i<=0?B:this.root.intersect(t,s,i)}}class N{constructor(t,s){this.origin=t,this.direction=s}position(t){return this.origin.add(this.direction.mulScalar(t))}}const Y={pathLengthThreshold:0,strokeWidth:1};class l{constructor(t=[],s=!1){this.keepIt=!1,this.points=t,this.keepIt=s}append(...t){this.points=[...this.points,...t]}boundingBox(){const t=this.points[0];let s=new f(t,t);for(let i=1;i<this.points.length;i++){const h=this.points[i];s=s.extend(new f(h,h))}return s}transform(t){const s=this.points.map(i=>t.mulPosition(i));return new l(s,this.keepIt)}chop(t){const s=new l([],this.keepIt);for(let i=0;i<this.points.length-1;i++){const h=this.points[i],x=this.points[i+1],n=x.sub(h),o=n.length();i==0&&s.append(h);let c=t;for(;c<o;)s.append(h.add(n.mulScalar(c/o))),c+=t;s.append(x)}return s}filter(t){const s=new S;let i=new l([],this.keepIt);return this.points.forEach(h=>{const{vector:x,ok:n}=t.filter(h);n?i.append(x):(i.points.length>1&&s.append(i),i=new l([],this.keepIt))}),i.points.length>1&&s.append(i),s}simplify(t){if(this.points.length<3)return new l([...this.points],this.keepIt);const s=this.points[0],i=this.points[this.points.length-1];let h=-1,x=0;for(let n=1;n<this.points.length-1;n++){const o=this.points[n].segmentDistance(s,i);o>x&&(h=n,x=o)}if(x>t){const n=new l(this.points.slice(0,h+1),this.keepIt).simplify(t),o=new l(this.points.slice(h),this.keepIt).simplify(t);return new l([...n.points.slice(0,n.points.length-1),...o.points],this.keepIt)}return new l([s,i],this.keepIt)}toString(){return this.points.map(t=>t.toString()).join(`
`)}toSVG(){return`<polyline points="${this.points.map(s=>`${s.x.toFixed(3)} ${s.y.toFixed(3)}`).join(" ")}" />`}}class S{constructor(t=[]){this.paths=t}append(...t){this.paths=[...this.paths,...t]}boundingBox(){let t=this.paths[0].boundingBox();for(let s=1;s<this.paths.length;s++){const i=this.paths[s];t=t.extend(i.boundingBox())}return t}transform(t){const s=this.paths.map(i=>i.transform(t));return new S(s)}chop(t){const s=this.paths.map(i=>i.chop(t));return new S(s)}filter(t){const s=[];return this.paths.forEach(i=>{s.push(...i.filter(t).paths)}),new S(s)}simplify(t){const s=this.paths.map(i=>i.simplify(t));return new S(s)}toString(){return this.paths.map(t=>`[
${t.toString()}
]`).join(`
`)}toSVG(t,s){let i=`<svg viewBox="0 0 ${t} ${s}" version="1.1" baseProfile="full" xmlns="http://www.w3.org/2000/svg">
`;return i+=`<g transform="translate(0, ${s}) scale(1, -1)" stroke="black" fill="none" stroke-width="${Y.strokeWidth}" stroke-linecap="round">
`,i+=this.paths.map(h=>h.toSVG()).join(`
`),i+=`
</g>
`,i+="</svg>",i}}const k={identity:function(){return new z(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)},translate:function(r){return new z(1,0,0,r.x,0,1,0,r.y,0,0,1,r.z,0,0,0,1)},scale:function(r){return new z(r.x,0,0,0,0,r.y,0,0,0,0,r.z,0,0,0,0,1)},rotate:function(r,t){const s=r.normalize(),i=Math.sin(t),h=Math.cos(t),x=1-h;return new z(x*s.x*s.x+h,x*s.x*s.y+s.z*i,x*s.z*s.x-s.y*i,0,x*s.x*s.y-s.z*i,x*s.y*s.y+h,x*s.y*s.z+s.x*i,0,x*s.z*s.x+s.y*i,x*s.y*s.z-s.x*i,x*s.z*s.z+h,0,0,0,0,1)},frustum:function(r,t,s,i,h,x){const n=2*h,o=t-r,c=i-s,a=x-h;return new z(n/o,0,(t+r)/o,0,0,n/c,(i+s)/c,0,0,0,(-x-h)/a,-n*x/a,0,0,-1,0)},orthographic:function(r,t,s,i,h,x){return new z(2/(t-r),0,0,-(t+r)/(t-r),0,2/(i-s),0,-(i+s)/(i-s),0,0,-2/(x-h),-(x+h)/(x-h),0,0,0,1)},perspective:function(r,t,s,i){const h=s*Math.tan(r*Math.PI/360),x=h*t;return k.frustum(-x,x,-h,h,s,i)},lookAt:function(r,t,s){const i=s.normalize(),h=t.sub(r).normalize(),x=h.cross(i).normalize(),n=x.cross(h).normalize();return new z(x.x,n.x,-h.x,r.x,x.y,n.y,-h.y,r.y,x.z,n.z,-h.z,r.z,0,0,0,1).inverse()}};class z{constructor(t,s,i,h,x,n,o,c,a,u,m,d,w,y,M,$){this.x00=t,this.x01=s,this.x02=i,this.x03=h,this.x10=x,this.x11=n,this.x12=o,this.x13=c,this.x20=a,this.x21=u,this.x22=m,this.x23=d,this.x30=w,this.x31=y,this.x32=M,this.x33=$}translate(t){return k.translate(t).mul(this)}scale(t){return k.scale(t).mul(this)}rotate(t,s){return k.rotate(t,s).mul(this)}frustum(t,s,i,h,x,n){return k.frustum(t,s,i,h,x,n).mul(this)}orthographic(t,s,i,h,x,n){return k.orthographic(t,s,i,h,x,n).mul(this)}perspective(t,s,i,h){return k.perspective(t,s,i,h).mul(this)}mul(t){const s=this.x00*t.x00+this.x01*t.x10+this.x02*t.x20+this.x03*t.x30,i=this.x10*t.x00+this.x11*t.x10+this.x12*t.x20+this.x13*t.x30,h=this.x20*t.x00+this.x21*t.x10+this.x22*t.x20+this.x23*t.x30,x=this.x30*t.x00+this.x31*t.x10+this.x32*t.x20+this.x33*t.x30,n=this.x00*t.x01+this.x01*t.x11+this.x02*t.x21+this.x03*t.x31,o=this.x10*t.x01+this.x11*t.x11+this.x12*t.x21+this.x13*t.x31,c=this.x20*t.x01+this.x21*t.x11+this.x22*t.x21+this.x23*t.x31,a=this.x30*t.x01+this.x31*t.x11+this.x32*t.x21+this.x33*t.x31,u=this.x00*t.x02+this.x01*t.x12+this.x02*t.x22+this.x03*t.x32,m=this.x10*t.x02+this.x11*t.x12+this.x12*t.x22+this.x13*t.x32,d=this.x20*t.x02+this.x21*t.x12+this.x22*t.x22+this.x23*t.x32,w=this.x30*t.x02+this.x31*t.x12+this.x32*t.x22+this.x33*t.x32,y=this.x00*t.x03+this.x01*t.x13+this.x02*t.x23+this.x03*t.x33,M=this.x10*t.x03+this.x11*t.x13+this.x12*t.x23+this.x13*t.x33,$=this.x20*t.x03+this.x21*t.x13+this.x22*t.x23+this.x23*t.x33,g=this.x30*t.x03+this.x31*t.x13+this.x32*t.x23+this.x33*t.x33;return new z(s,n,u,y,i,o,m,M,h,c,d,$,x,a,w,g)}mulPosition(t){const s=this.x00*t.x+this.x01*t.y+this.x02*t.z+this.x03,i=this.x10*t.x+this.x11*t.y+this.x12*t.z+this.x13,h=this.x20*t.x+this.x21*t.y+this.x22*t.z+this.x23;return new e(s,i,h)}mulPositionW(t){const s=this.x00*t.x+this.x01*t.y+this.x02*t.z+this.x03,i=this.x10*t.x+this.x11*t.y+this.x12*t.z+this.x13,h=this.x20*t.x+this.x21*t.y+this.x22*t.z+this.x23,x=this.x30*t.x+this.x31*t.y+this.x32*t.z+this.x33;return new e(s/x,i/x,h/x)}mulDirection(t){const s=this.x00*t.x+this.x01*t.y+this.x02*t.z,i=this.x10*t.x+this.x11*t.y+this.x12*t.z,h=this.x20*t.x+this.x21*t.y+this.x22*t.z;return new e(s,i,h).normalize()}mulRay(t){return new N(this.mulPosition(t.origin),this.mulDirection(t.direction))}mulBox(t){const s=new e(this.x00,this.x10,this.x20),i=new e(this.x01,this.x11,this.x21),h=new e(this.x02,this.x12,this.x22),x=new e(this.x03,this.x13,this.x23);let n=s.mulScalar(t.min.x),o=s.mulScalar(t.max.x),c=i.mulScalar(t.min.y),a=i.mulScalar(t.max.y),u=h.mulScalar(t.min.z),m=h.mulScalar(t.max.z);n=n.min(o),o=n.max(o),c=c.min(a),a=c.max(a),u=u.min(m),m=u.max(m);const d=n.add(c).add(u).add(x),w=o.add(a).add(m).add(x);return new f(d,w)}transpose(){return new z(this.x00,this.x10,this.x20,this.x30,this.x01,this.x11,this.x21,this.x31,this.x02,this.x12,this.x22,this.x32,this.x03,this.x13,this.x23,this.x33)}determinant(){return this.x00*this.x11*this.x22*this.x33-this.x00*this.x11*this.x23*this.x32+this.x00*this.x12*this.x23*this.x31-this.x00*this.x12*this.x21*this.x33+this.x00*this.x13*this.x21*this.x32-this.x00*this.x13*this.x22*this.x31-this.x01*this.x12*this.x23*this.x30+this.x01*this.x12*this.x20*this.x33-this.x01*this.x13*this.x20*this.x32+this.x01*this.x13*this.x22*this.x30-this.x01*this.x10*this.x22*this.x33+this.x01*this.x10*this.x23*this.x32+this.x02*this.x13*this.x20*this.x31-this.x02*this.x13*this.x21*this.x30+this.x02*this.x10*this.x21*this.x33-this.x02*this.x10*this.x23*this.x31+this.x02*this.x11*this.x23*this.x30-this.x02*this.x11*this.x20*this.x33-this.x03*this.x10*this.x21*this.x32+this.x03*this.x10*this.x22*this.x31-this.x03*this.x11*this.x22*this.x30+this.x03*this.x11*this.x20*this.x32-this.x03*this.x12*this.x20*this.x31+this.x03*this.x12*this.x21*this.x30}inverse(){const t=this.determinant();t===0&&console.warn("dividing by zero, determinant is zero");const s=(this.x12*this.x23*this.x31-this.x13*this.x22*this.x31+this.x13*this.x21*this.x32-this.x11*this.x23*this.x32-this.x12*this.x21*this.x33+this.x11*this.x22*this.x33)/t,i=(this.x03*this.x22*this.x31-this.x02*this.x23*this.x31-this.x03*this.x21*this.x32+this.x01*this.x23*this.x32+this.x02*this.x21*this.x33-this.x01*this.x22*this.x33)/t,h=(this.x02*this.x13*this.x31-this.x03*this.x12*this.x31+this.x03*this.x11*this.x32-this.x01*this.x13*this.x32-this.x02*this.x11*this.x33+this.x01*this.x12*this.x33)/t,x=(this.x03*this.x12*this.x21-this.x02*this.x13*this.x21-this.x03*this.x11*this.x22+this.x01*this.x13*this.x22+this.x02*this.x11*this.x23-this.x01*this.x12*this.x23)/t,n=(this.x13*this.x22*this.x30-this.x12*this.x23*this.x30-this.x13*this.x20*this.x32+this.x10*this.x23*this.x32+this.x12*this.x20*this.x33-this.x10*this.x22*this.x33)/t,o=(this.x02*this.x23*this.x30-this.x03*this.x22*this.x30+this.x03*this.x20*this.x32-this.x00*this.x23*this.x32-this.x02*this.x20*this.x33+this.x00*this.x22*this.x33)/t,c=(this.x03*this.x12*this.x30-this.x02*this.x13*this.x30-this.x03*this.x10*this.x32+this.x00*this.x13*this.x32+this.x02*this.x10*this.x33-this.x00*this.x12*this.x33)/t,a=(this.x02*this.x13*this.x20-this.x03*this.x12*this.x20+this.x03*this.x10*this.x22-this.x00*this.x13*this.x22-this.x02*this.x10*this.x23+this.x00*this.x12*this.x23)/t,u=(this.x11*this.x23*this.x30-this.x13*this.x21*this.x30+this.x13*this.x20*this.x31-this.x10*this.x23*this.x31-this.x11*this.x20*this.x33+this.x10*this.x21*this.x33)/t,m=(this.x03*this.x21*this.x30-this.x01*this.x23*this.x30-this.x03*this.x20*this.x31+this.x00*this.x23*this.x31+this.x01*this.x20*this.x33-this.x00*this.x21*this.x33)/t,d=(this.x01*this.x13*this.x30-this.x03*this.x11*this.x30+this.x03*this.x10*this.x31-this.x00*this.x13*this.x31-this.x01*this.x10*this.x33+this.x00*this.x11*this.x33)/t,w=(this.x03*this.x11*this.x20-this.x01*this.x13*this.x20-this.x03*this.x10*this.x21+this.x00*this.x13*this.x21+this.x01*this.x10*this.x23-this.x00*this.x11*this.x23)/t,y=(this.x12*this.x21*this.x30-this.x11*this.x22*this.x30-this.x12*this.x20*this.x31+this.x10*this.x22*this.x31+this.x11*this.x20*this.x32-this.x10*this.x21*this.x32)/t,M=(this.x01*this.x22*this.x30-this.x02*this.x21*this.x30+this.x02*this.x20*this.x31-this.x00*this.x22*this.x31-this.x01*this.x20*this.x32+this.x00*this.x21*this.x32)/t,$=(this.x02*this.x11*this.x30-this.x01*this.x12*this.x30-this.x02*this.x10*this.x31+this.x00*this.x12*this.x31+this.x01*this.x10*this.x32-this.x00*this.x11*this.x32)/t,g=(this.x01*this.x12*this.x20-this.x02*this.x11*this.x20+this.x02*this.x10*this.x21-this.x00*this.x12*this.x21-this.x01*this.x10*this.x22+this.x00*this.x11*this.x22)/t;return new z(s,i,h,x,n,o,c,a,u,m,d,w,y,M,$,g)}toString(){return`
${this.x00}	${this.x01}	${this.x02}	${this.x03}
${this.x10}	${this.x11}	${this.x12}	${this.x13}
${this.x20}	${this.x21}	${this.x22}	${this.x23}
${this.x30}	${this.x31}	${this.x32}	${this.x33}
`}}const Z=new f(new e(-1,-1,-1),new e(1,1,1));class q{constructor(t,s,i){this.matrix=t,this.eye=s,this.scene=i}filter(t){const s=this.matrix.mulPositionW(t);return this.scene.visible(this.eye,t)?Z.contains(s)?{vector:s,ok:!0}:{vector:s,ok:!1}:{vector:s,ok:!1}}}class D{constructor(){this.shapes=[],this.tree=null}compile(){this.shapes.forEach(t=>{t.compile()}),this.tree||(this.tree=new X(this.shapes))}add(t){this.shapes=[...this.shapes,t]}intersect(t){return this.tree.intersect(t)}visible(t,s){const i=t.sub(s),h=new N(s,i.normalize());return this.intersect(h).t>=i.length()}paths(){const t=[];return this.shapes.forEach(s=>{t.push(...s.paths().paths)}),new S(t)}render(t,s,i,h,x,n,o,c,a){const u=h/x;let m=k.lookAt(t,s,i);return m=m.perspective(n,u,o,c),this.renderWithMatrix(m,t,h,x,a)}renderWithMatrix(t,s,i,h,x){this.compile();let n=this.paths();return x>0&&(n=n.chop(x)),n=n.filter(new q(t,s,this)),x>0&&(n=n.simplify(1e-6)),t=k.translate(new e(1,1,0)).scale(new e(i/2,h/2,0)),n=n.transform(t),n}}var W=(r=>(r[r.Outlines=0]="Outlines",r[r.StripedOuterSides=1]="StripedOuterSides",r))(W||{});class j{constructor(t,s,i=0){this.min=t,this.max=s,this.box=new f(t,s),this.cubeType=i}compile(){}boundingBox(){return this.box}contains(t,s){return!(t.x<this.min.x-s||t.x>this.max.x+s||t.y<this.min.y-s||t.y>this.max.y+s||t.z<this.min.z-s||t.z>this.max.z+s)}intersect(t){let s=this.min.sub(t.origin).div(t.direction),i=this.max.sub(t.origin).div(t.direction);const h=s.min(i),x=s.max(i),n=Math.max(h.x,h.y,h.z),o=Math.min(x.x,x.y,x.z);return n<.001&&o>.001?new I(this,o):n>=.001&&n<o?new I(this,n):B}paths(){if(this.cubeType===1)return this.pathsStripedOuterSides();const t=this.min.x,s=this.min.y,i=this.min.z,h=this.max.x,x=this.max.y,n=this.max.z;return new S([new l([new e(t,s,i),new e(t,s,n)]),new l([new e(t,s,i),new e(t,x,i)]),new l([new e(t,s,i),new e(h,s,i)]),new l([new e(t,s,n),new e(t,x,n)]),new l([new e(t,s,n),new e(h,s,n)]),new l([new e(t,x,i),new e(t,x,n)]),new l([new e(t,x,i),new e(h,x,i)]),new l([new e(t,x,n),new e(h,x,n)]),new l([new e(h,s,i),new e(h,s,n)]),new l([new e(h,s,i),new e(h,x,i)]),new l([new e(h,s,n),new e(h,x,n)]),new l([new e(h,x,i),new e(h,x,n)])])}pathsStripedOuterSides(){const t=this.min.x,s=this.min.y,i=this.min.z,h=this.max.x,x=this.max.y,n=this.max.z,o=new S;for(let c=0;c<=10;c++){const a=c/10,u=t+(h-t)*a,m=s+(x-s)*a;o.append(new l([new e(u,s,i),new e(u,s,n)])),o.append(new l([new e(u,x,i),new e(u,x,n)])),o.append(new l([new e(t,m,i),new e(t,m,n)])),o.append(new l([new e(h,m,i),new e(h,m,n)]))}return o}}function G(){const r=new D,t=9;for(let c=-t;c<=t;c++)for(let a=-t;a<=t;a++){const u=Math.random()*.25+.2,m=Math.random()*.5-.25,d=Math.random()*.5-.25,w=c+m*0,y=a+d*0,M=Math.random()*3+1,$=new j(new e(w-u,y-u,0),new e(w+u,y+u,M),W.StripedOuterSides);c==2&&a==1||r.add($)}const s=new e(1.75,1.25,6),i=new e(0,0,0),h=new e(0,0,1),x=1024,n=1024;return r.render(s,i,h,x,n,100,.1,100,.01).toSVG(x,n)}self.addEventListener("message",function(r){self.postMessage(G())},!1)})();
